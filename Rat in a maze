void solve(int i,int j,vector<vector<int>>&m,int n,vector<string>&res,string move,vector<vector<int>>&vis,int di[],int dj[])
    {
        if(i==n-1 && j==n-1)
        {
            res.push_back(move);
            return;
        }
        string dir="DLRU";
        for(int ind=0;ind<4;ind++)
        {
            int nexti=i+di[ind];
            int nextj=j+dj[ind];
            if(nexti>=0 && nextj>=0 && nextj<n && nexti<n && !vis[nexti][nextj] && m[nexti][nextj]==1)
            {
                vis[i][j]=1;
                solve(nexti,nextj,m,n,res,move+dir[ind],vis,di,dj);
                vis[i][j]=0;
            }
        }
    }
    vector<string> findPath(vector<vector<int>>&m,int n) {
        // Your code goes here
        vector<string>res;
        vector<vector<int>>vis(n,vector<int>(n,0));
        int dj[]={0,-1,1,0};
        int di[]={1,0,0,-1};
        if(m[0][0]==1)
        {
            solve(0,0,m,n,res,"",vis,di,dj);
        }
        return res;
    }
