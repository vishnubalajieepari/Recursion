void solveSudoku(vector<vector<char>>& board) {
        solve(board);
    }
    bool solve(vector<vector<char>>&board)
    {
        for(int i=0;i<board.size();i++)
        {
            for(int j=0;j<board[0].size();j++)
            {
                if(board[i][j]=='.')
                {
                    for(char ch='1';ch<='9';ch++)
                    {
                        if(safe(i,j,board,ch))
                        {
                            board[i][j]=ch;
                            if(solve(board)==true) // here we are checking if it is true then return the result as mentioned that unique solution exists
                                return true;
                            else
                                board[i][j]='.';
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    // conditions for checking safe 
    bool safe(int row,int col,vector<vector<char>>&board,char ch)
    {
        for(int i=0;i<9;i++)
        {
            if(board[i][col]==ch)//if the column contains same element then return false
                return false;
            if(board[row][i]==ch)// if the row contains same element then return false
                return false;
            if(board[3*(row/3)+(i/3)][3*(col/3)+(i%3)]==ch)// if the inside 3X3 block contains same element then return false
                return false;
        }
        return true;
    }
